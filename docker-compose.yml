#version: "3.9"
#
#networks:
#  smart_wp_network:
#    driver: bridge
#
#services:
#  # ==========================
#  # MongoDB Database
#  # ==========================
#  mongodb:
#    image: mongo:8.0.4
#    container_name: ${PROJECT_NAME}_mongodb
#    ports:
#      - "${MONGO_PORT}:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
#      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
#    volumes:
#      - ./mongo_data:/data/db
#    restart: unless-stopped
#    networks:
#      - smart_wp_network
#    deploy:
#      resources:
#        limits:
#          cpus: "1.0"
#          memory: 512M
#
#  # ==========================
#  # n8n Workflow Automation
#  # ==========================
#  n8n:
#    image: n8nio/n8n
#    container_name: ${PROJECT_NAME}_n8n
#    ports:
#      - "${N8N_PORT}:5678"
#    environment:
#      N8N_BASIC_AUTH_ACTIVE: "true"
#      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
#      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
#    volumes:
#      - ./n8n_data:/home/node/.n8n
#    restart: unless-stopped
#    networks:
#      - smart_wp_network
#    deploy:
#      resources:
#        limits:
#          cpus: "1.0"
#          memory: 1G
#
#  # ==========================
#  # API Gateway
#  # ==========================
#  api-gateway:
#    build: ./api-gateway
#    container_name: ${PROJECT_NAME}_api_gateway
#    ports:
#      - "${API_GATEWAY_PORT}:8000"
#    depends_on:
#      - users-service
#      - projects-service
#      - workflows-service
#      - billing-service
#      - notifications-service
#    environment:
#      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
#    networks:
#      - smart_wp_network
#    restart: unless-stopped
#
#  # ==========================
#  # Users Service
#  # ==========================
#  users-service:
#    build: ./services/users-service
#    container_name: ${PROJECT_NAME}_users_service
#    ports:
#      - "8001:8000"
#    environment:
#      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
#    networks:
#      - smart_wp_network
#    restart: unless-stopped
#
#  # ==========================
#  # Projects Service
#  # ==========================
#  projects-service:
#    build: ./services/projects-service
#    container_name: ${PROJECT_NAME}_projects_service
#    ports:
#      - "8002:8000"
#    environment:
#      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
#    networks:
#      - smart_wp_network
#    restart: unless-stopped
#
#  # ==========================
#  # Workflows Service
#  # ==========================
#  workflows-service:
#    build: ./services/workflows-service
#    container_name: ${PROJECT_NAME}_workflows_service
#    ports:
#      - "8003:8000"
#    environment:
#      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
#    networks:
#      - smart_wp_network
#    restart: unless-stopped
#
#  # ==========================
#  # Billing Service
#  # ==========================
#  billing-service:
#    build: ./services/billing-service
#    container_name: ${PROJECT_NAME}_billing_service
#    ports:
#      - "8004:8000"
#    environment:
#      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
#    networks:
#      - smart_wp_network
#    restart: unless-stopped
#
#  # ==========================
#  # Notifications Service
#  # ==========================
#  notifications-service:
#    build: ./services/notifications-service
#    container_name: ${PROJECT_NAME}_notifications_service
#    ports:
#      - "8005:8000"
#    environment:
#      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
#    networks:
#      - smart_wp_network
#    restart: unless-stopped

version: "3.9"

networks:
  smart_wp_network:
    driver: bridge

services:
  # ==========================
  # Base Image (يُبنى مرة واحدة فقط)
  # ==========================
  base-image:
    build:
      context: ./docker/base-python
      dockerfile: Dockerfile
    image: smart-wp-base:latest
    container_name: ${PROJECT_NAME}_base_image

  # ==========================
  # MongoDB Database
  # ==========================
  mongodb:
    image: mongo:8.0.4
    container_name: ${PROJECT_NAME}_mongodb
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ./mongo_data:/data/db
    restart: unless-stopped
    networks:
      - smart_wp_network
    healthcheck:
      test: ["CMD", "mongo", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================
  # n8n Workflow Automation
  # ==========================
  n8n:
    image: n8nio/n8n
    container_name: ${PROJECT_NAME}_n8n
    ports:
      - "${N8N_PORT}:5678"
    environment:
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
    volumes:
      - ./n8n_data:/home/node/.n8n
    restart: unless-stopped
    networks:
      - smart_wp_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================
  # API Gateway
  # ==========================
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_api_gateway
    depends_on:
      base-image:
        condition: service_started
      users-service:
        condition: service_healthy
      projects-service:
        condition: service_healthy
      workflows-service:
        condition: service_healthy
      billing-service:
        condition: service_healthy
      notifications-service:
        condition: service_healthy
    ports:
      - "${API_GATEWAY_PORT}:8000"
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
    networks:
      - smart_wp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================
  # Users Service
  # ==========================
  users-service:
    build:
      context: ./services/users-service
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_users_service
    depends_on:
      base-image:
        condition: service_started
    ports:
      - "8001:8000"
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
    networks:
      - smart_wp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================
  # Projects Service
  # ==========================
  projects-service:
    build:
      context: ./services/projects-service
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_projects_service
    depends_on:
      base-image:
        condition: service_started
    ports:
      - "8002:8000"
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
    networks:
      - smart_wp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================
  # Workflows Service
  # ==========================
  workflows-service:
    build:
      context: ./services/workflows-service
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_workflows_service
    depends_on:
      base-image:
        condition: service_started
    ports:
      - "8003:8000"
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
    networks:
      - smart_wp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================
  # Billing Service
  # ==========================
  billing-service:
    build:
      context: ./services/billing-service
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_billing_service
    depends_on:
      base-image:
        condition: service_started
    ports:
      - "8004:8000"
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
    networks:
      - smart_wp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================
  # Notifications Service
  # ==========================
  notifications-service:
    build:
      context: ./services/notifications-service
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_notifications_service
    depends_on:
      base-image:
        condition: service_started
    ports:
      - "8005:8000"
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}
    networks:
      - smart_wp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
